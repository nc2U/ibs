name: Database Backup

on:
  schedule:
    - cron: "0 */4 * * *"
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# job은 사용자가 정한 플랫폼을 통해 steps 라는 일련의 과정을 실행.
# 여러 개의 job 을 사용할 수 있으며, 여러 개의 job 을 사용할 때는 서로 정보도 교환 가능.
# 각각 독립적으로도 실행 가능.
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      # 레파지터리 체크 아웃
      - name: Check out source code
        uses: actions/checkout@v4

      # database backup (CloudNativePG via Kubernetes Job)
      - name: database backup
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.CICD_HOST }}
          username: ${{ secrets.CICD_USER }}
          password: ${{ secrets.CICD_PASS }}
          command: |
            cd ${{ secrets.CICD_PATH }}/prod/deploy/helm/scripts

            # CloudNativePG 백업 실행 (manual-backup.sh 사용)
            echo "Running CloudNativePG backup for production..."
            sh manual-backup.sh prod

            # 백업 결과 확인
            if [ $? -eq 0 ]; then
              echo "✅ PostgreSQL backup completed successfully"
            else
              echo "❌ PostgreSQL backup failed"
              exit 1
            fi

      # slack --> notification
      - name: Send slack when failed
        if: ${{ failure() }}                    # 실패했을 때 실행
        uses: ./.github/actions/slack-notify    # 직접 '만든' Action이므로 uses 키워드를 이용해서 아래 경로를 입력해줍니다.
        with:
          slack_incoming_url: ${{ secrets.SLACK_INCOMING_URL }}
