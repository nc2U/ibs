name: Database Dev Sync

on:
  schedule:
    - cron: "0 17 * * 6" # UTC 기준으로 매주 토요일 오후 5시 (KST 일요일 새벽 2시) 마다 실행
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# job은 사용자가 정한 플랫폼을 통해 steps 라는 일련의 과정을 실행.
# 여러 개의 job 을 사용할 수 있으며, 여러 개의 job 을 사용할 때는 서로 정보도 교환 가능.
# 각각 독립적으로도 실행 가능.
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      # Prod backup file copy to Dev (NFS)
      - name: Copy production backup to dev
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.NFS_HOST }}
          username: ${{ secrets.NFS_USER }}
          password: ${{ secrets.NFS_PASS }}
          command: |
            sh "${{ secrets.NFS_PATH }}"/prod/volume/backups/copy_script.sh
            chmod -R 775 ${{ secrets.NFS_PATH }}/dev/volume/backups/

      # CloudNativePG restore to Dev
      - name: Restore database to dev environment
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.CICD_HOST }}
          username: ${{ secrets.CICD_USER }}
          password: ${{ secrets.CICD_PASS }}
          command: |
            cd ${{ secrets.CICD_PATH }}/dev/deploy/helm/scripts

            # CloudNativePG 복원 실행 (manual-restore.sh 사용)
            echo "Restoring production data to dev environment..."
            echo "Note: This will prompt for backup file selection and confirmation"

            # 가장 최근 백업 파일 자동 선택 및 복원
            # manual-restore.sh는 interactive하므로, 자동화 필요 시 수정 필요
            sh manual-restore.sh dev

            if [ $? -eq 0 ]; then
              echo "✅ Database sync to dev completed successfully"
            else
              echo "❌ Database sync to dev failed"
              exit 1
            fi

      # slack --> notification
      - name: Send slack when failed
        if: ${{ failure() }}                    # 실패했을 때 실행
        uses: ./.github/actions/slack-notify    # 직접 '만든' Action이므로 uses 키워드를 이용해서 아래 경로를 입력해줍니다.
        with:
          slack_incoming_url: ${{ secrets.SLACK_INCOMING_URL }}
