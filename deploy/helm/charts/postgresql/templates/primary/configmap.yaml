{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "postgresql.v1.primary.fullname" . }}-init-scripts
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  # init.sql 파일을 ConfigMap에 넣음
  init.sql: |
    DO $$
    BEGIN
      IF NOT EXISTS (SELECT FROM pg_database WHERE datname = '{{ .Release.Name }} ') THEN
        CREATE DATABASE ibs;
    END IF;
    END $$;
    \c {{ .Release.Name }}
    CREATE SCHEMA IF NOT EXISTS {{ .Release.Name }}  AUTHORIZATION {{ .Values.primary.initdb.owner | default "postgres" }};
    GRANT ALL ON SCHEMA {{ .Release.Name }}  TO {{ .Values.auth.username }};
    ALTER DATABASE {{ .Release.Name }}  SET search_path TO {{ .Release.Name }} , public;
---
{{- if (include "postgresql.v1.primary.createConfigmap" .) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-configuration" (include "postgresql.v1.primary.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: primary
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  {{- if .Values.primary.configuration }}
  postgresql.conf: |
    {{- include "common.tplvalues.render" ( dict "value" .Values.primary.configuration "context" $ ) | nindent 4 }}
  {{- end }}
  {{- if .Values.primary.pgHbaConfiguration }}
  pg_hba.conf: |
    {{- include "common.tplvalues.render" ( dict "value" .Values.primary.pgHbaConfiguration "context" $ ) | nindent 4 }}
  {{- end }}
{{- end }}