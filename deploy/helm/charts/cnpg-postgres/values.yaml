# CloudNativePG PostgreSQL Configuration for IBS

# Release name override
nameOverride: "postgres"
fullnameOverride: "postgres"

# PostgreSQL Image Configuration
image:
  # Using official PostgreSQL image from Docker Hub
  registry: docker.io
  repository: postgres
  tag: "17.2"
  pullPolicy: IfNotPresent

# Authentication Configuration
auth:
  # Superuser (postgres) password
  # Can be overridden by global.dbPassword from parent values
  postgresPassword: ""

  # Application user credentials
  username: "ibs"
  # Can be overridden by global.dbPassword from parent values
  password: ""
  database: "ibs"

  # Optional: Use existing secret instead of creating new one
  # Leave empty to create new secrets
  existingSecret: ""

  # Secret keys (only used if existingSecret is set)
  secretKeys:
    postgresPasswordKey: "postgres-password"
    userPasswordKey: "password"

# Replication Configuration
replication:
  # Number of PostgreSQL instances (1 primary + N replicas)
  instances: 2

  # Synchronous replication (0 = asynchronous, matching current Bitnami setup)
  minSyncReplicas: 0
  maxSyncReplicas: 0

# Storage Configuration
storage:
  # Storage class (matching current Bitnami setup)
  storageClass: "nfs-client"

  # Volume size (increased from 1Gi for better performance)
  size: "1Gi"

  # Volume mode
  volumeMode: Filesystem

  # Access mode
  accessMode: ReadWriteOnce

# PostgreSQL Configuration Parameters
postgresql:
  # PostgreSQL version-specific parameters
  parameters:
    # Connection settings
    max_connections: "200"
    superuser_reserved_connections: "3"

    # Memory settings
    shared_buffers: "256MB"
    effective_cache_size: "1GB"
    maintenance_work_mem: "64MB"
    work_mem: "4MB"

    # WAL settings
    wal_buffers: "16MB"
    min_wal_size: "1GB"
    max_wal_size: "4GB"
    wal_level: "replica"

    # Checkpoint settings
    checkpoint_completion_target: "0.9"

    # Query planner
    default_statistics_target: "100"
    random_page_cost: "1.1"
    effective_io_concurrency: "200"

    # Worker processes
    max_worker_processes: "4"
    max_parallel_workers_per_gather: "2"
    max_parallel_workers: "4"
    max_parallel_maintenance_workers: "2"

    # Locale and timezone (matching current setup)
    timezone: "Asia/Seoul"
    lc_messages: "en_US.UTF-8"
    lc_monetary: "en_US.UTF-8"
    lc_numeric: "en_US.UTF-8"
    lc_time: "en_US.UTF-8"

    # Logging
    log_timezone: "Asia/Seoul"
    log_min_duration_statement: "1000"  # Log queries > 1s
    log_connections: "off"
    log_disconnections: "off"

    # Autovacuum (important for maintenance)
    autovacuum: "on"
    autovacuum_max_workers: "3"
    autovacuum_naptime: "1min"

# Backup Configuration
backup:
  # Disabled by default to avoid credential validation errors
  # Enable only when S3 credentials are configured
  enabled: false

  # Backup schedule (daily at 2 AM KST)
  schedule: "0 2 * * *"

  # Backup retention policy
  retentionPolicy: "30d"

  # Backup destination (only used if s3.enabled is true)
  destinationPath: ""

  # S3-compatible storage configuration
  # IMPORTANT: backup.enabled and s3.enabled must both be true to enable backups
  s3:
    enabled: false
    bucket: ""
    region: "ap-northeast-2"
    endpoint: ""
    accessKeyId: ""
    secretAccessKey: ""

  # WAL archiving configuration
  wal:
    compression: "gzip"
    maxParallel: 2

  # Data backup configuration
  data:
    compression: "gzip"
    jobs: 2

# Monitoring Configuration
monitoring:
  # Enable Prometheus PodMonitor
  enabled: false

  # Custom queries for monitoring (optional)
  customQueries: []

# Resource Limits and Requests
resources:
  requests:
    memory: "512Mi"
    cpu: "500m"
  limits:
    memory: "1Gi"
    cpu: "1000m"

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Affinity Configuration
affinity:
  # Pod anti-affinity to spread replicas across nodes
  podAntiAffinityType: "preferred"

  # Node affinity (optional)
  nodeAffinity: {}

# Tolerations (optional)
tolerations: []

# Node selector (optional)
nodeSelector: {}

# Service Configuration
service:
  type: ClusterIP
  port: 5432

# PgBouncer Connection Pooler (optional)
pgbouncer:
  enabled: false
  instances: 2
  poolMode: "transaction"
  parameters:
    max_client_conn: "1000"
    default_pool_size: "25"
    min_pool_size: "10"
    reserve_pool_size: "5"

# Additional PostgreSQL configurations
additionalConfig: {}
# Example:
# additionalConfig:
#   shared_preload_libraries: "pg_stat_statements"

# Bootstrap configuration
bootstrap:
  # Initialize new cluster
  initdb:
    # Database encoding
    encoding: "UTF8"
    localeCollate: "en_US.UTF-8"
    localeCType: "en_US.UTF-8"

    # Post-init SQL (optional)
    postInitSQL: []
    # Example:
    # postInitSQL:
    #   - CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    #   - CREATE EXTENSION IF NOT EXISTS pgaudit;

# Certificates (optional, for SSL)
certificates:
  enabled: false

# Managed Roles (optional)
managedRoles: []

# Service Account
serviceAccount:
  create: true
  name: ""

# Common labels
commonLabels: {}

# Common annotations
commonAnnotations: {}
