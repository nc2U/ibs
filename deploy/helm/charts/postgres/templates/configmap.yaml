{{- if .Values.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "postgres.fullname" . }}-config
data:
  POSTGRES_USER: "{{ .Release.Name }}"
  POSTGRES_DB: "{{ .Release.Name }}"
  TZ: "Asia/Seoul"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "postgres.fullname" . }}-replica-cm
data:
  primary.conf: |
    wal_level = replica
    max_wal_senders = 10
    wal_keep_size = 64
    hot_standby = on

  replica.conf: |
    hot_standby = on

  primary.sql: |
    CREATE ROLE {{ .Release.Name }} WITH REPLICATION LOGIN ENCRYPTED PASSWORD '{{ .Values.global.dbPassword }}';
    CREATE DATABASE {{ .Release.Name }};
    CREATE SCHEMA IF NOT EXISTS {{ .Release.Name }};
    GRANT ALL ON SCHEMA {{ .Release.Name }} TO {{ .Release.Name }};

  secondary.sh: |
    #!/bin/bash
    set -e
    if [ ! -s "$PGDATA/PG_VERSION" ]; then
      echo "Starting base backup from primary..."
      pg_basebackup -h {{ include "postgres.fullname" . }}-0.{{ .Values.global.dbType }}.{{ .Release.Namespace }}.svc.cluster.local -D "$PGDATA" -U {{ .Release.Name }} -Fp -Xs -P -R
    fi
{{- end }}
